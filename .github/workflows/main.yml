name: Deploy Tag Webserver

on:
  push:
    branches:
      - main
jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Build Java App (JAR)
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          ls build/libs || ls target

      - name: Copy App and dependencies to EC2
        run: |
          scp build/libs/app.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app.jar
          scp docker-compose.yaml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/docker-compose.yaml
          scp Dockerfile ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/Dockerfile
          scp nginx/nginx.conf ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/nginx/nginx.conf

      - name: SSH and Run docker compose on EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/${USER}
            echo "${{ secrets.NGINX_CRT }}" > ~/nginx/secrets/nginx-selfsigned.crt
            echo "${{ secrets.NGINX_KEY }}" > ~/nginx/secrets/nginx-selfsigned.key
            sudo docker stop app || true
            sudo docker rm app || true
            sudo docker build -t tag-webserver -f Dockerfile .
            sudo docker compose up -d
          EOF
